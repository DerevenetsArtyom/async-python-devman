10 час 40 мин 

ШАГ 4
# она нужна, чтобы связать две корутины.
# Одна меняет кадры анимации (animate_spaceship),
# другая их отрисовывает и обрабатывает read_control (run_spaceship).
# для отрисовки 2-a вызывает draw_frame и передает ей аргумент — текущий кадр.

'''
async def animate_spaceship():
    global spaceship_frame
    ...
    spaceship_frame = frame1
    ...
    spaceship_frame = frame2
    ...

async def run_spaceship():
    ...
    controls = read_controls()
    row, column = ...
    draw_frame(canvas, row, column, spaceship_frame)
    ...
'''


* curses умеет накапливать ввод. 
read_controls считывает все из буфера и может вернуть сразу два ненулевых 
значения — движение по горизонтали и по вертикали.
Получится диагональ. См. код def read_controls


* Урок второй по условиям задачи корутина run_spaceship управляет положением корабля и рисует его на экране. 
Но меня напрягает один момент, я это заметил еще в первом уроке - 
стоит добавить туда вызов read_controls(canvas), как анимация коробля начинает подтормаживать, 
при этом на гифках к урокам я такого не замечаю. 
Может стоит завести глобальную переменную controls (коллекция) и туда кидать 
считанные нажатия клавиш отдельной корутиной, 
а в run_spaceship к ней обращаться и реагировать если там что-то есть, как думаете?

Почти все сдают с этим багом. Во втором уроке он встает в полный рост и его уже обязательно чинить

